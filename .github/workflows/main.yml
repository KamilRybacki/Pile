name: Set up emulated disks

on: [push]

jobs:
  lint-ansible:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        run: |
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip
      - name: Install ansible-lint
        run: pip3 install ansible-lint
      - name: Lint ansible files
        run: |
            find . \
              -path "./roles/*" -name "*.yml" \
              -o -path "./tests/*" -name "*.yml" \
              -o -name "pile.yml" \
              -exec ansible-lint -c ./ansible-lint-dev.yml {} +

  set-up-disks:
    needs: lint-ansible
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
    - name: Set up emulated disks
      run: python3 tests/storage/dummy_disks.py setup 4

  test-lvm:
    needs: set-up-disks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dawidd6/action-ansible-playbook@v2
        id: lvm-ansible-playbook
        with:
          playbook: tests/storage/main.yml
          options: --inventory hosts.yml
      - name: Check if there are no false positives
        env:
          ERROR_MESSAGES: '
            No inventory was parsed |
            skipping: no hosts matched'
        run: |
            split_error_messages=$(echo "${ERROR_MESSAGES}" | tr "|" "\n")
            output=$(echo "${steps.lvm-ansible-playbook.outputs.stdout}")
            for error in "${split_error_messages[@]}"; do
              if grep -q "$string" <<< "$output"; then
                outputs.flag='false'
                break
              fi
            done

  cleanup:
    needs: test-lvm
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      run: |
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip
    - name: Clean up loop devices
      run: python3 tests/storage/dummy_disks.py cleanup
    - name: Remove generated hosts file
      run: rm -f /hosts.yml
